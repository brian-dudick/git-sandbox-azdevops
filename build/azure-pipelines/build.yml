parameters:
  solution: PrimeService/PrimeService.csproj
  buildDefaultArgs: '/P:Configuration=Release;DeployOnBuild=true;PackageLocation="$(Build.ArtifactStagingDirectory)\Co-ConstructSite.zip"'

#EnableUpdateable=false;
steps:
- powershell: |
   # Using an input-macro:
   Write-Host "This works: $(solution)"

    # Using the env var directly:
    Write-Host "This does not work: $env:SOLUTION"

    # Using the mapped env var:
    Write-Host "This works: $env:MY_MAPPED_ENV_VAR"    # Recommended
    env:
      MY_MAPPED_ENV_VAR: $(solution)

   if($Env:BUILD_SourceBranchName -like '*Features*')
   {
     Write-Host 'Running Features Param Build'
     Write-Host '$Env:BUILD_BUILDNUMBER - For example, enter something like:'
     Write-Host '$Env:BUILD_BUILDNUMBER = "Build HelloWorld_0000.00.00.0"'
   } 
  displayName: 'Setup MB Build Args'
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1
- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: ${{ parameters.solution }}
- task: msbuild@1
  displayName: 'Run MS Build On Project'
  inputs:
    solution: ${{ parameters.solution }}
    msbuildArguments: ${{parameters.buildDefaultArgs}}
    clean: true

# msbuild
#- ${{ if not(contains(variables['Build.SourceBranch'], 'Features')) }}:
#  - task: msbuild@1
#  inputs:
  #  solution: PrimeService/PrimeService.csproj

#- ${{ if contains(variables['Build.SourceBranch'], 'Features') }}:
#  - task: msbuild@1

# dotnet
#- ${{ if !contains(variables['Build.SourceBranch'], 'Features') }}:
#  - task: dotnet@1
#    inputs:
#      #command: build
#  - task: dotnet@1
#    inputs:
#      #command: test